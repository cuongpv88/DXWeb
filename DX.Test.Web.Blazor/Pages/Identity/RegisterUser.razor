@page "/Account/Register"

@inject NavigationManager navigationManager
@inject IAuthService<RegisterUserModel, AuthenticationModel> AuthenticationService 


<h1>Register</h1>

<EditForm Model="@userModel" OnValidSubmit="@HandleValidSubmit" Context="RegisterForm">
	<DataAnnotationsValidator />
	@if (errors.Count() > 0) {
		<div class="alert alert-danger" role="alert">
			<ul>
				@foreach(var s in errors!)
				{
	                <li>@s</li>
		        }
			</ul>
		</div>
	}
	<DxFormLayout >
		<DxFormLayoutItem Caption="Email address:" ColSpanMd="12">
			<Template>
				<DxTextBox @bind-Text="@userModel.EmailAddress"></DxTextBox>
			</Template>
		</DxFormLayoutItem>

		<DxFormLayoutItem Caption="Password:" ColSpanMd="6">
			<Template>
				<DxTextBox @bind-Text="@userModel.Password" Password="true"></DxTextBox>
			</Template>
		</DxFormLayoutItem>

		<DxFormLayoutItem Caption="Confirm Password:" ColSpanMd="6">
			<Template>
				<DxTextBox @bind-Text="@userModel.PasswordConfirm" Password="true"></DxTextBox>
			</Template>
		</DxFormLayoutItem>

		<DxFormLayoutItem Caption="Birthdate:" ColSpanMd="6">
			<Template>
				<DxDateEdit @bind-Date="@userModel.BirthDate"></DxDateEdit>
			</Template>
		</DxFormLayoutItem>

		<DxFormLayoutItem BeginRow="true" Caption="Street:" ColSpanMd="8">
			<Template>
				<DxTextBox @bind-Text="@userModel.Street"></DxTextBox>
			</Template>
		</DxFormLayoutItem>

		<DxFormLayoutItem Caption="No:" ColSpanMd="2">
			<Template>
				<DxTextBox @bind-Text="@userModel.HouseNo"></DxTextBox>
			</Template>
		</DxFormLayoutItem>

		<DxFormLayoutItem Caption="Suf.:" ColSpanMd="2">
			<Template>
				<DxTextBox @bind-Text="@userModel.HouseNoSuffix"></DxTextBox>
			</Template>
		</DxFormLayoutItem>

		<DxFormLayoutItem BeginRow="true" Caption="Zipcode:" ColSpanMd="4">
			<Template>
				<DxTextBox @bind-Text="@userModel.ZipCode"></DxTextBox>
			</Template>
		</DxFormLayoutItem>
		<DxFormLayoutItem Caption="City:" ColSpanMd="4">
			<Template>
				<DxTextBox @bind-Text="@userModel.City"></DxTextBox>
			</Template>
		</DxFormLayoutItem>
		<DxFormLayoutItem Caption="State:" ColSpanMd="4">
			<Template>
				<DxTextBox @bind-Text="@userModel.State"></DxTextBox>
			</Template>
		</DxFormLayoutItem>
		<DxFormLayoutItem BeginRow="true" Caption="Country:" ColSpanMd="12">
			<Template>
				<DxTextBox @bind-Text="@userModel.Country"></DxTextBox>
			</Template>
		</DxFormLayoutItem>


		<DxFormLayoutItem ColSpanMd="12">
			<Template>
				 <DxButton RenderStyle="@ButtonRenderStyle.Primary" SubmitFormOnClick="true" Text="Register"
                                RenderStyleMode="@ButtonRenderStyleMode.Contained" />
			</Template>
		</DxFormLayoutItem>
	</DxFormLayout>
</EditForm>

@code {
	private string redirectUrl = "";
	private List<string> errors = new List<string>();
	private RegisterUserModel userModel = new DX.Test.Web.Blazor.Data.RegisterUserModel();	

	    protected async override Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        
        var uri = navigationManager.ToAbsoluteUri(navigationManager.Uri);
        if (QueryHelpers.ParseQuery(uri.Query).TryGetValue("redirectUrl", out var url))
            redirectUrl = url;
        else
            redirectUrl = "/";
    }

	private async Task HandleValidSubmit()
	{
		
		Console.WriteLine("OnValidSubmit");
		userModel.ReturnUrl = redirectUrl;
        var result = await AuthenticationService.RegisterUser(userModel);
        if (!result.IsSuccessfulRegistration)
            errors.AddRange(result.Errors);
        else
            navigationManager.NavigateTo(redirectUrl);

	}
	private void HandleInvalidSubmit()
	{
		Console.WriteLine("OnInvalidSubmit");
	}


}
